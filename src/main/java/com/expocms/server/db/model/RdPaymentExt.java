package com.expocms.server.db.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class RdPaymentExt {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table rd_payment
     *
     * @mbggenerated Sun Aug 16 01:14:17 CST 2015
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table rd_payment
     *
     * @mbggenerated Sun Aug 16 01:14:17 CST 2015
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table rd_payment
     *
     * @mbggenerated Sun Aug 16 01:14:17 CST 2015
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rd_payment
     *
     * @mbggenerated Sun Aug 16 01:14:17 CST 2015
     */
    public RdPaymentExt() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rd_payment
     *
     * @mbggenerated Sun Aug 16 01:14:17 CST 2015
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rd_payment
     *
     * @mbggenerated Sun Aug 16 01:14:17 CST 2015
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rd_payment
     *
     * @mbggenerated Sun Aug 16 01:14:17 CST 2015
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rd_payment
     *
     * @mbggenerated Sun Aug 16 01:14:17 CST 2015
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rd_payment
     *
     * @mbggenerated Sun Aug 16 01:14:17 CST 2015
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rd_payment
     *
     * @mbggenerated Sun Aug 16 01:14:17 CST 2015
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rd_payment
     *
     * @mbggenerated Sun Aug 16 01:14:17 CST 2015
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rd_payment
     *
     * @mbggenerated Sun Aug 16 01:14:17 CST 2015
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rd_payment
     *
     * @mbggenerated Sun Aug 16 01:14:17 CST 2015
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rd_payment
     *
     * @mbggenerated Sun Aug 16 01:14:17 CST 2015
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table rd_payment
     *
     * @mbggenerated Sun Aug 16 01:14:17 CST 2015
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andPayDateIsNull() {
            addCriterion("pay_date is null");
            return (Criteria) this;
        }

        public Criteria andPayDateIsNotNull() {
            addCriterion("pay_date is not null");
            return (Criteria) this;
        }

        public Criteria andPayDateEqualTo(Date value) {
            addCriterionForJDBCDate("pay_date =", value, "payDate");
            return (Criteria) this;
        }

        public Criteria andPayDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("pay_date <>", value, "payDate");
            return (Criteria) this;
        }

        public Criteria andPayDateGreaterThan(Date value) {
            addCriterionForJDBCDate("pay_date >", value, "payDate");
            return (Criteria) this;
        }

        public Criteria andPayDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("pay_date >=", value, "payDate");
            return (Criteria) this;
        }

        public Criteria andPayDateLessThan(Date value) {
            addCriterionForJDBCDate("pay_date <", value, "payDate");
            return (Criteria) this;
        }

        public Criteria andPayDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("pay_date <=", value, "payDate");
            return (Criteria) this;
        }

        public Criteria andPayDateIn(List<Date> values) {
            addCriterionForJDBCDate("pay_date in", values, "payDate");
            return (Criteria) this;
        }

        public Criteria andPayDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("pay_date not in", values, "payDate");
            return (Criteria) this;
        }

        public Criteria andPayDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("pay_date between", value1, value2, "payDate");
            return (Criteria) this;
        }

        public Criteria andPayDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("pay_date not between", value1, value2, "payDate");
            return (Criteria) this;
        }

        public Criteria andLoanAgreementIdIsNull() {
            addCriterion("loan_agreement_id is null");
            return (Criteria) this;
        }

        public Criteria andLoanAgreementIdIsNotNull() {
            addCriterion("loan_agreement_id is not null");
            return (Criteria) this;
        }

        public Criteria andLoanAgreementIdEqualTo(Long value) {
            addCriterion("loan_agreement_id =", value, "loanAgreementId");
            return (Criteria) this;
        }

        public Criteria andLoanAgreementIdNotEqualTo(Long value) {
            addCriterion("loan_agreement_id <>", value, "loanAgreementId");
            return (Criteria) this;
        }

        public Criteria andLoanAgreementIdGreaterThan(Long value) {
            addCriterion("loan_agreement_id >", value, "loanAgreementId");
            return (Criteria) this;
        }

        public Criteria andLoanAgreementIdGreaterThanOrEqualTo(Long value) {
            addCriterion("loan_agreement_id >=", value, "loanAgreementId");
            return (Criteria) this;
        }

        public Criteria andLoanAgreementIdLessThan(Long value) {
            addCriterion("loan_agreement_id <", value, "loanAgreementId");
            return (Criteria) this;
        }

        public Criteria andLoanAgreementIdLessThanOrEqualTo(Long value) {
            addCriterion("loan_agreement_id <=", value, "loanAgreementId");
            return (Criteria) this;
        }

        public Criteria andLoanAgreementIdIn(List<Long> values) {
            addCriterion("loan_agreement_id in", values, "loanAgreementId");
            return (Criteria) this;
        }

        public Criteria andLoanAgreementIdNotIn(List<Long> values) {
            addCriterion("loan_agreement_id not in", values, "loanAgreementId");
            return (Criteria) this;
        }

        public Criteria andLoanAgreementIdBetween(Long value1, Long value2) {
            addCriterion("loan_agreement_id between", value1, value2, "loanAgreementId");
            return (Criteria) this;
        }

        public Criteria andLoanAgreementIdNotBetween(Long value1, Long value2) {
            addCriterion("loan_agreement_id not between", value1, value2, "loanAgreementId");
            return (Criteria) this;
        }

        public Criteria andDealIdIsNull() {
            addCriterion("deal_id is null");
            return (Criteria) this;
        }

        public Criteria andDealIdIsNotNull() {
            addCriterion("deal_id is not null");
            return (Criteria) this;
        }

        public Criteria andDealIdEqualTo(Long value) {
            addCriterion("deal_id =", value, "dealId");
            return (Criteria) this;
        }

        public Criteria andDealIdNotEqualTo(Long value) {
            addCriterion("deal_id <>", value, "dealId");
            return (Criteria) this;
        }

        public Criteria andDealIdGreaterThan(Long value) {
            addCriterion("deal_id >", value, "dealId");
            return (Criteria) this;
        }

        public Criteria andDealIdGreaterThanOrEqualTo(Long value) {
            addCriterion("deal_id >=", value, "dealId");
            return (Criteria) this;
        }

        public Criteria andDealIdLessThan(Long value) {
            addCriterion("deal_id <", value, "dealId");
            return (Criteria) this;
        }

        public Criteria andDealIdLessThanOrEqualTo(Long value) {
            addCriterion("deal_id <=", value, "dealId");
            return (Criteria) this;
        }

        public Criteria andDealIdIn(List<Long> values) {
            addCriterion("deal_id in", values, "dealId");
            return (Criteria) this;
        }

        public Criteria andDealIdNotIn(List<Long> values) {
            addCriterion("deal_id not in", values, "dealId");
            return (Criteria) this;
        }

        public Criteria andDealIdBetween(Long value1, Long value2) {
            addCriterion("deal_id between", value1, value2, "dealId");
            return (Criteria) this;
        }

        public Criteria andDealIdNotBetween(Long value1, Long value2) {
            addCriterion("deal_id not between", value1, value2, "dealId");
            return (Criteria) this;
        }

        public Criteria andPayAmountIsNull() {
            addCriterion("pay_amount is null");
            return (Criteria) this;
        }

        public Criteria andPayAmountIsNotNull() {
            addCriterion("pay_amount is not null");
            return (Criteria) this;
        }

        public Criteria andPayAmountEqualTo(Float value) {
            addCriterion("pay_amount =", value, "payAmount");
            return (Criteria) this;
        }

        public Criteria andPayAmountNotEqualTo(Float value) {
            addCriterion("pay_amount <>", value, "payAmount");
            return (Criteria) this;
        }

        public Criteria andPayAmountGreaterThan(Float value) {
            addCriterion("pay_amount >", value, "payAmount");
            return (Criteria) this;
        }

        public Criteria andPayAmountGreaterThanOrEqualTo(Float value) {
            addCriterion("pay_amount >=", value, "payAmount");
            return (Criteria) this;
        }

        public Criteria andPayAmountLessThan(Float value) {
            addCriterion("pay_amount <", value, "payAmount");
            return (Criteria) this;
        }

        public Criteria andPayAmountLessThanOrEqualTo(Float value) {
            addCriterion("pay_amount <=", value, "payAmount");
            return (Criteria) this;
        }

        public Criteria andPayAmountIn(List<Float> values) {
            addCriterion("pay_amount in", values, "payAmount");
            return (Criteria) this;
        }

        public Criteria andPayAmountNotIn(List<Float> values) {
            addCriterion("pay_amount not in", values, "payAmount");
            return (Criteria) this;
        }

        public Criteria andPayAmountBetween(Float value1, Float value2) {
            addCriterion("pay_amount between", value1, value2, "payAmount");
            return (Criteria) this;
        }

        public Criteria andPayAmountNotBetween(Float value1, Float value2) {
            addCriterion("pay_amount not between", value1, value2, "payAmount");
            return (Criteria) this;
        }

        public Criteria andBonusAmountIsNull() {
            addCriterion("bonus_amount is null");
            return (Criteria) this;
        }

        public Criteria andBonusAmountIsNotNull() {
            addCriterion("bonus_amount is not null");
            return (Criteria) this;
        }

        public Criteria andBonusAmountEqualTo(Float value) {
            addCriterion("bonus_amount =", value, "bonusAmount");
            return (Criteria) this;
        }

        public Criteria andBonusAmountNotEqualTo(Float value) {
            addCriterion("bonus_amount <>", value, "bonusAmount");
            return (Criteria) this;
        }

        public Criteria andBonusAmountGreaterThan(Float value) {
            addCriterion("bonus_amount >", value, "bonusAmount");
            return (Criteria) this;
        }

        public Criteria andBonusAmountGreaterThanOrEqualTo(Float value) {
            addCriterion("bonus_amount >=", value, "bonusAmount");
            return (Criteria) this;
        }

        public Criteria andBonusAmountLessThan(Float value) {
            addCriterion("bonus_amount <", value, "bonusAmount");
            return (Criteria) this;
        }

        public Criteria andBonusAmountLessThanOrEqualTo(Float value) {
            addCriterion("bonus_amount <=", value, "bonusAmount");
            return (Criteria) this;
        }

        public Criteria andBonusAmountIn(List<Float> values) {
            addCriterion("bonus_amount in", values, "bonusAmount");
            return (Criteria) this;
        }

        public Criteria andBonusAmountNotIn(List<Float> values) {
            addCriterion("bonus_amount not in", values, "bonusAmount");
            return (Criteria) this;
        }

        public Criteria andBonusAmountBetween(Float value1, Float value2) {
            addCriterion("bonus_amount between", value1, value2, "bonusAmount");
            return (Criteria) this;
        }

        public Criteria andBonusAmountNotBetween(Float value1, Float value2) {
            addCriterion("bonus_amount not between", value1, value2, "bonusAmount");
            return (Criteria) this;
        }

        public Criteria andFundStateIsNull() {
            addCriterion("fund_state is null");
            return (Criteria) this;
        }

        public Criteria andFundStateIsNotNull() {
            addCriterion("fund_state is not null");
            return (Criteria) this;
        }

        public Criteria andFundStateEqualTo(String value) {
            addCriterion("fund_state =", value, "fundState");
            return (Criteria) this;
        }

        public Criteria andFundStateNotEqualTo(String value) {
            addCriterion("fund_state <>", value, "fundState");
            return (Criteria) this;
        }

        public Criteria andFundStateGreaterThan(String value) {
            addCriterion("fund_state >", value, "fundState");
            return (Criteria) this;
        }

        public Criteria andFundStateGreaterThanOrEqualTo(String value) {
            addCriterion("fund_state >=", value, "fundState");
            return (Criteria) this;
        }

        public Criteria andFundStateLessThan(String value) {
            addCriterion("fund_state <", value, "fundState");
            return (Criteria) this;
        }

        public Criteria andFundStateLessThanOrEqualTo(String value) {
            addCriterion("fund_state <=", value, "fundState");
            return (Criteria) this;
        }

        public Criteria andFundStateLike(String value) {
            addCriterion("fund_state like", value, "fundState");
            return (Criteria) this;
        }

        public Criteria andFundStateNotLike(String value) {
            addCriterion("fund_state not like", value, "fundState");
            return (Criteria) this;
        }

        public Criteria andFundStateIn(List<String> values) {
            addCriterion("fund_state in", values, "fundState");
            return (Criteria) this;
        }

        public Criteria andFundStateNotIn(List<String> values) {
            addCriterion("fund_state not in", values, "fundState");
            return (Criteria) this;
        }

        public Criteria andFundStateBetween(String value1, String value2) {
            addCriterion("fund_state between", value1, value2, "fundState");
            return (Criteria) this;
        }

        public Criteria andFundStateNotBetween(String value1, String value2) {
            addCriterion("fund_state not between", value1, value2, "fundState");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table rd_payment
     *
     * @mbggenerated do_not_delete_during_merge Sun Aug 16 01:14:17 CST 2015
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table rd_payment
     *
     * @mbggenerated Sun Aug 16 01:14:17 CST 2015
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}