package com.expocms.server.db.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class RdProductExt {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table rd_product
     *
     * @mbggenerated Sun Aug 16 01:14:17 CST 2015
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table rd_product
     *
     * @mbggenerated Sun Aug 16 01:14:17 CST 2015
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table rd_product
     *
     * @mbggenerated Sun Aug 16 01:14:17 CST 2015
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rd_product
     *
     * @mbggenerated Sun Aug 16 01:14:17 CST 2015
     */
    public RdProductExt() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rd_product
     *
     * @mbggenerated Sun Aug 16 01:14:17 CST 2015
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rd_product
     *
     * @mbggenerated Sun Aug 16 01:14:17 CST 2015
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rd_product
     *
     * @mbggenerated Sun Aug 16 01:14:17 CST 2015
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rd_product
     *
     * @mbggenerated Sun Aug 16 01:14:17 CST 2015
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rd_product
     *
     * @mbggenerated Sun Aug 16 01:14:17 CST 2015
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rd_product
     *
     * @mbggenerated Sun Aug 16 01:14:17 CST 2015
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rd_product
     *
     * @mbggenerated Sun Aug 16 01:14:17 CST 2015
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rd_product
     *
     * @mbggenerated Sun Aug 16 01:14:17 CST 2015
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rd_product
     *
     * @mbggenerated Sun Aug 16 01:14:17 CST 2015
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rd_product
     *
     * @mbggenerated Sun Aug 16 01:14:17 CST 2015
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table rd_product
     *
     * @mbggenerated Sun Aug 16 01:14:17 CST 2015
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andProductIdIsNull() {
            addCriterion("product_id is null");
            return (Criteria) this;
        }

        public Criteria andProductIdIsNotNull() {
            addCriterion("product_id is not null");
            return (Criteria) this;
        }

        public Criteria andProductIdEqualTo(Long value) {
            addCriterion("product_id =", value, "productId");
            return (Criteria) this;
        }

        public Criteria andProductIdNotEqualTo(Long value) {
            addCriterion("product_id <>", value, "productId");
            return (Criteria) this;
        }

        public Criteria andProductIdGreaterThan(Long value) {
            addCriterion("product_id >", value, "productId");
            return (Criteria) this;
        }

        public Criteria andProductIdGreaterThanOrEqualTo(Long value) {
            addCriterion("product_id >=", value, "productId");
            return (Criteria) this;
        }

        public Criteria andProductIdLessThan(Long value) {
            addCriterion("product_id <", value, "productId");
            return (Criteria) this;
        }

        public Criteria andProductIdLessThanOrEqualTo(Long value) {
            addCriterion("product_id <=", value, "productId");
            return (Criteria) this;
        }

        public Criteria andProductIdIn(List<Long> values) {
            addCriterion("product_id in", values, "productId");
            return (Criteria) this;
        }

        public Criteria andProductIdNotIn(List<Long> values) {
            addCriterion("product_id not in", values, "productId");
            return (Criteria) this;
        }

        public Criteria andProductIdBetween(Long value1, Long value2) {
            addCriterion("product_id between", value1, value2, "productId");
            return (Criteria) this;
        }

        public Criteria andProductIdNotBetween(Long value1, Long value2) {
            addCriterion("product_id not between", value1, value2, "productId");
            return (Criteria) this;
        }

        public Criteria andNameIsNull() {
            addCriterion("name is null");
            return (Criteria) this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("name is not null");
            return (Criteria) this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("name =", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("name <>", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("name >", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("name >=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("name <", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("name <=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("name like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("name not like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameIn(List<String> values) {
            addCriterion("name in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotIn(List<String> values) {
            addCriterion("name not in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("name between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("name not between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andPeriodNumberIsNull() {
            addCriterion("period_number is null");
            return (Criteria) this;
        }

        public Criteria andPeriodNumberIsNotNull() {
            addCriterion("period_number is not null");
            return (Criteria) this;
        }

        public Criteria andPeriodNumberEqualTo(Integer value) {
            addCriterion("period_number =", value, "periodNumber");
            return (Criteria) this;
        }

        public Criteria andPeriodNumberNotEqualTo(Integer value) {
            addCriterion("period_number <>", value, "periodNumber");
            return (Criteria) this;
        }

        public Criteria andPeriodNumberGreaterThan(Integer value) {
            addCriterion("period_number >", value, "periodNumber");
            return (Criteria) this;
        }

        public Criteria andPeriodNumberGreaterThanOrEqualTo(Integer value) {
            addCriterion("period_number >=", value, "periodNumber");
            return (Criteria) this;
        }

        public Criteria andPeriodNumberLessThan(Integer value) {
            addCriterion("period_number <", value, "periodNumber");
            return (Criteria) this;
        }

        public Criteria andPeriodNumberLessThanOrEqualTo(Integer value) {
            addCriterion("period_number <=", value, "periodNumber");
            return (Criteria) this;
        }

        public Criteria andPeriodNumberIn(List<Integer> values) {
            addCriterion("period_number in", values, "periodNumber");
            return (Criteria) this;
        }

        public Criteria andPeriodNumberNotIn(List<Integer> values) {
            addCriterion("period_number not in", values, "periodNumber");
            return (Criteria) this;
        }

        public Criteria andPeriodNumberBetween(Integer value1, Integer value2) {
            addCriterion("period_number between", value1, value2, "periodNumber");
            return (Criteria) this;
        }

        public Criteria andPeriodNumberNotBetween(Integer value1, Integer value2) {
            addCriterion("period_number not between", value1, value2, "periodNumber");
            return (Criteria) this;
        }

        public Criteria andPriceIsNull() {
            addCriterion("price is null");
            return (Criteria) this;
        }

        public Criteria andPriceIsNotNull() {
            addCriterion("price is not null");
            return (Criteria) this;
        }

        public Criteria andPriceEqualTo(Float value) {
            addCriterion("price =", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceNotEqualTo(Float value) {
            addCriterion("price <>", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceGreaterThan(Float value) {
            addCriterion("price >", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceGreaterThanOrEqualTo(Float value) {
            addCriterion("price >=", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceLessThan(Float value) {
            addCriterion("price <", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceLessThanOrEqualTo(Float value) {
            addCriterion("price <=", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceIn(List<Float> values) {
            addCriterion("price in", values, "price");
            return (Criteria) this;
        }

        public Criteria andPriceNotIn(List<Float> values) {
            addCriterion("price not in", values, "price");
            return (Criteria) this;
        }

        public Criteria andPriceBetween(Float value1, Float value2) {
            addCriterion("price between", value1, value2, "price");
            return (Criteria) this;
        }

        public Criteria andPriceNotBetween(Float value1, Float value2) {
            addCriterion("price not between", value1, value2, "price");
            return (Criteria) this;
        }

        public Criteria andPeriodIsNull() {
            addCriterion("period is null");
            return (Criteria) this;
        }

        public Criteria andPeriodIsNotNull() {
            addCriterion("period is not null");
            return (Criteria) this;
        }

        public Criteria andPeriodEqualTo(Integer value) {
            addCriterion("period =", value, "period");
            return (Criteria) this;
        }

        public Criteria andPeriodNotEqualTo(Integer value) {
            addCriterion("period <>", value, "period");
            return (Criteria) this;
        }

        public Criteria andPeriodGreaterThan(Integer value) {
            addCriterion("period >", value, "period");
            return (Criteria) this;
        }

        public Criteria andPeriodGreaterThanOrEqualTo(Integer value) {
            addCriterion("period >=", value, "period");
            return (Criteria) this;
        }

        public Criteria andPeriodLessThan(Integer value) {
            addCriterion("period <", value, "period");
            return (Criteria) this;
        }

        public Criteria andPeriodLessThanOrEqualTo(Integer value) {
            addCriterion("period <=", value, "period");
            return (Criteria) this;
        }

        public Criteria andPeriodIn(List<Integer> values) {
            addCriterion("period in", values, "period");
            return (Criteria) this;
        }

        public Criteria andPeriodNotIn(List<Integer> values) {
            addCriterion("period not in", values, "period");
            return (Criteria) this;
        }

        public Criteria andPeriodBetween(Integer value1, Integer value2) {
            addCriterion("period between", value1, value2, "period");
            return (Criteria) this;
        }

        public Criteria andPeriodNotBetween(Integer value1, Integer value2) {
            addCriterion("period not between", value1, value2, "period");
            return (Criteria) this;
        }

        public Criteria andOnboardIsNull() {
            addCriterion("onboard is null");
            return (Criteria) this;
        }

        public Criteria andOnboardIsNotNull() {
            addCriterion("onboard is not null");
            return (Criteria) this;
        }

        public Criteria andOnboardEqualTo(Integer value) {
            addCriterion("onboard =", value, "onboard");
            return (Criteria) this;
        }

        public Criteria andOnboardNotEqualTo(Integer value) {
            addCriterion("onboard <>", value, "onboard");
            return (Criteria) this;
        }

        public Criteria andOnboardGreaterThan(Integer value) {
            addCriterion("onboard >", value, "onboard");
            return (Criteria) this;
        }

        public Criteria andOnboardGreaterThanOrEqualTo(Integer value) {
            addCriterion("onboard >=", value, "onboard");
            return (Criteria) this;
        }

        public Criteria andOnboardLessThan(Integer value) {
            addCriterion("onboard <", value, "onboard");
            return (Criteria) this;
        }

        public Criteria andOnboardLessThanOrEqualTo(Integer value) {
            addCriterion("onboard <=", value, "onboard");
            return (Criteria) this;
        }

        public Criteria andOnboardIn(List<Integer> values) {
            addCriterion("onboard in", values, "onboard");
            return (Criteria) this;
        }

        public Criteria andOnboardNotIn(List<Integer> values) {
            addCriterion("onboard not in", values, "onboard");
            return (Criteria) this;
        }

        public Criteria andOnboardBetween(Integer value1, Integer value2) {
            addCriterion("onboard between", value1, value2, "onboard");
            return (Criteria) this;
        }

        public Criteria andOnboardNotBetween(Integer value1, Integer value2) {
            addCriterion("onboard not between", value1, value2, "onboard");
            return (Criteria) this;
        }

        public Criteria andOnboardDateIsNull() {
            addCriterion("onboard_date is null");
            return (Criteria) this;
        }

        public Criteria andOnboardDateIsNotNull() {
            addCriterion("onboard_date is not null");
            return (Criteria) this;
        }

        public Criteria andOnboardDateEqualTo(Date value) {
            addCriterionForJDBCDate("onboard_date =", value, "onboardDate");
            return (Criteria) this;
        }

        public Criteria andOnboardDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("onboard_date <>", value, "onboardDate");
            return (Criteria) this;
        }

        public Criteria andOnboardDateGreaterThan(Date value) {
            addCriterionForJDBCDate("onboard_date >", value, "onboardDate");
            return (Criteria) this;
        }

        public Criteria andOnboardDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("onboard_date >=", value, "onboardDate");
            return (Criteria) this;
        }

        public Criteria andOnboardDateLessThan(Date value) {
            addCriterionForJDBCDate("onboard_date <", value, "onboardDate");
            return (Criteria) this;
        }

        public Criteria andOnboardDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("onboard_date <=", value, "onboardDate");
            return (Criteria) this;
        }

        public Criteria andOnboardDateIn(List<Date> values) {
            addCriterionForJDBCDate("onboard_date in", values, "onboardDate");
            return (Criteria) this;
        }

        public Criteria andOnboardDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("onboard_date not in", values, "onboardDate");
            return (Criteria) this;
        }

        public Criteria andOnboardDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("onboard_date between", value1, value2, "onboardDate");
            return (Criteria) this;
        }

        public Criteria andOnboardDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("onboard_date not between", value1, value2, "onboardDate");
            return (Criteria) this;
        }

        public Criteria andTypeIsNull() {
            addCriterion("type is null");
            return (Criteria) this;
        }

        public Criteria andTypeIsNotNull() {
            addCriterion("type is not null");
            return (Criteria) this;
        }

        public Criteria andTypeEqualTo(String value) {
            addCriterion("type =", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotEqualTo(String value) {
            addCriterion("type <>", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThan(String value) {
            addCriterion("type >", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThanOrEqualTo(String value) {
            addCriterion("type >=", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLessThan(String value) {
            addCriterion("type <", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLessThanOrEqualTo(String value) {
            addCriterion("type <=", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLike(String value) {
            addCriterion("type like", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotLike(String value) {
            addCriterion("type not like", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeIn(List<String> values) {
            addCriterion("type in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotIn(List<String> values) {
            addCriterion("type not in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeBetween(String value1, String value2) {
            addCriterion("type between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotBetween(String value1, String value2) {
            addCriterion("type not between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andAnnualizedYieldIsNull() {
            addCriterion("annualized_yield is null");
            return (Criteria) this;
        }

        public Criteria andAnnualizedYieldIsNotNull() {
            addCriterion("annualized_yield is not null");
            return (Criteria) this;
        }

        public Criteria andAnnualizedYieldEqualTo(String value) {
            addCriterion("annualized_yield =", value, "annualizedYield");
            return (Criteria) this;
        }

        public Criteria andAnnualizedYieldNotEqualTo(String value) {
            addCriterion("annualized_yield <>", value, "annualizedYield");
            return (Criteria) this;
        }

        public Criteria andAnnualizedYieldGreaterThan(String value) {
            addCriterion("annualized_yield >", value, "annualizedYield");
            return (Criteria) this;
        }

        public Criteria andAnnualizedYieldGreaterThanOrEqualTo(String value) {
            addCriterion("annualized_yield >=", value, "annualizedYield");
            return (Criteria) this;
        }

        public Criteria andAnnualizedYieldLessThan(String value) {
            addCriterion("annualized_yield <", value, "annualizedYield");
            return (Criteria) this;
        }

        public Criteria andAnnualizedYieldLessThanOrEqualTo(String value) {
            addCriterion("annualized_yield <=", value, "annualizedYield");
            return (Criteria) this;
        }

        public Criteria andAnnualizedYieldLike(String value) {
            addCriterion("annualized_yield like", value, "annualizedYield");
            return (Criteria) this;
        }

        public Criteria andAnnualizedYieldNotLike(String value) {
            addCriterion("annualized_yield not like", value, "annualizedYield");
            return (Criteria) this;
        }

        public Criteria andAnnualizedYieldIn(List<String> values) {
            addCriterion("annualized_yield in", values, "annualizedYield");
            return (Criteria) this;
        }

        public Criteria andAnnualizedYieldNotIn(List<String> values) {
            addCriterion("annualized_yield not in", values, "annualizedYield");
            return (Criteria) this;
        }

        public Criteria andAnnualizedYieldBetween(String value1, String value2) {
            addCriterion("annualized_yield between", value1, value2, "annualizedYield");
            return (Criteria) this;
        }

        public Criteria andAnnualizedYieldNotBetween(String value1, String value2) {
            addCriterion("annualized_yield not between", value1, value2, "annualizedYield");
            return (Criteria) this;
        }

        public Criteria andMinPriceIsNull() {
            addCriterion("min_price is null");
            return (Criteria) this;
        }

        public Criteria andMinPriceIsNotNull() {
            addCriterion("min_price is not null");
            return (Criteria) this;
        }

        public Criteria andMinPriceEqualTo(Float value) {
            addCriterion("min_price =", value, "minPrice");
            return (Criteria) this;
        }

        public Criteria andMinPriceNotEqualTo(Float value) {
            addCriterion("min_price <>", value, "minPrice");
            return (Criteria) this;
        }

        public Criteria andMinPriceGreaterThan(Float value) {
            addCriterion("min_price >", value, "minPrice");
            return (Criteria) this;
        }

        public Criteria andMinPriceGreaterThanOrEqualTo(Float value) {
            addCriterion("min_price >=", value, "minPrice");
            return (Criteria) this;
        }

        public Criteria andMinPriceLessThan(Float value) {
            addCriterion("min_price <", value, "minPrice");
            return (Criteria) this;
        }

        public Criteria andMinPriceLessThanOrEqualTo(Float value) {
            addCriterion("min_price <=", value, "minPrice");
            return (Criteria) this;
        }

        public Criteria andMinPriceIn(List<Float> values) {
            addCriterion("min_price in", values, "minPrice");
            return (Criteria) this;
        }

        public Criteria andMinPriceNotIn(List<Float> values) {
            addCriterion("min_price not in", values, "minPrice");
            return (Criteria) this;
        }

        public Criteria andMinPriceBetween(Float value1, Float value2) {
            addCriterion("min_price between", value1, value2, "minPrice");
            return (Criteria) this;
        }

        public Criteria andMinPriceNotBetween(Float value1, Float value2) {
            addCriterion("min_price not between", value1, value2, "minPrice");
            return (Criteria) this;
        }

        public Criteria andMaxPriceIsNull() {
            addCriterion("max_price is null");
            return (Criteria) this;
        }

        public Criteria andMaxPriceIsNotNull() {
            addCriterion("max_price is not null");
            return (Criteria) this;
        }

        public Criteria andMaxPriceEqualTo(Float value) {
            addCriterion("max_price =", value, "maxPrice");
            return (Criteria) this;
        }

        public Criteria andMaxPriceNotEqualTo(Float value) {
            addCriterion("max_price <>", value, "maxPrice");
            return (Criteria) this;
        }

        public Criteria andMaxPriceGreaterThan(Float value) {
            addCriterion("max_price >", value, "maxPrice");
            return (Criteria) this;
        }

        public Criteria andMaxPriceGreaterThanOrEqualTo(Float value) {
            addCriterion("max_price >=", value, "maxPrice");
            return (Criteria) this;
        }

        public Criteria andMaxPriceLessThan(Float value) {
            addCriterion("max_price <", value, "maxPrice");
            return (Criteria) this;
        }

        public Criteria andMaxPriceLessThanOrEqualTo(Float value) {
            addCriterion("max_price <=", value, "maxPrice");
            return (Criteria) this;
        }

        public Criteria andMaxPriceIn(List<Float> values) {
            addCriterion("max_price in", values, "maxPrice");
            return (Criteria) this;
        }

        public Criteria andMaxPriceNotIn(List<Float> values) {
            addCriterion("max_price not in", values, "maxPrice");
            return (Criteria) this;
        }

        public Criteria andMaxPriceBetween(Float value1, Float value2) {
            addCriterion("max_price between", value1, value2, "maxPrice");
            return (Criteria) this;
        }

        public Criteria andMaxPriceNotBetween(Float value1, Float value2) {
            addCriterion("max_price not between", value1, value2, "maxPrice");
            return (Criteria) this;
        }

        public Criteria andLimitReachedDateIsNull() {
            addCriterion("limit_reached_date is null");
            return (Criteria) this;
        }

        public Criteria andLimitReachedDateIsNotNull() {
            addCriterion("limit_reached_date is not null");
            return (Criteria) this;
        }

        public Criteria andLimitReachedDateEqualTo(Date value) {
            addCriterionForJDBCDate("limit_reached_date =", value, "limitReachedDate");
            return (Criteria) this;
        }

        public Criteria andLimitReachedDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("limit_reached_date <>", value, "limitReachedDate");
            return (Criteria) this;
        }

        public Criteria andLimitReachedDateGreaterThan(Date value) {
            addCriterionForJDBCDate("limit_reached_date >", value, "limitReachedDate");
            return (Criteria) this;
        }

        public Criteria andLimitReachedDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("limit_reached_date >=", value, "limitReachedDate");
            return (Criteria) this;
        }

        public Criteria andLimitReachedDateLessThan(Date value) {
            addCriterionForJDBCDate("limit_reached_date <", value, "limitReachedDate");
            return (Criteria) this;
        }

        public Criteria andLimitReachedDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("limit_reached_date <=", value, "limitReachedDate");
            return (Criteria) this;
        }

        public Criteria andLimitReachedDateIn(List<Date> values) {
            addCriterionForJDBCDate("limit_reached_date in", values, "limitReachedDate");
            return (Criteria) this;
        }

        public Criteria andLimitReachedDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("limit_reached_date not in", values, "limitReachedDate");
            return (Criteria) this;
        }

        public Criteria andLimitReachedDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("limit_reached_date between", value1, value2, "limitReachedDate");
            return (Criteria) this;
        }

        public Criteria andLimitReachedDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("limit_reached_date not between", value1, value2, "limitReachedDate");
            return (Criteria) this;
        }

        public Criteria andModificationDateIsNull() {
            addCriterion("modification_date is null");
            return (Criteria) this;
        }

        public Criteria andModificationDateIsNotNull() {
            addCriterion("modification_date is not null");
            return (Criteria) this;
        }

        public Criteria andModificationDateEqualTo(Date value) {
            addCriterionForJDBCDate("modification_date =", value, "modificationDate");
            return (Criteria) this;
        }

        public Criteria andModificationDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("modification_date <>", value, "modificationDate");
            return (Criteria) this;
        }

        public Criteria andModificationDateGreaterThan(Date value) {
            addCriterionForJDBCDate("modification_date >", value, "modificationDate");
            return (Criteria) this;
        }

        public Criteria andModificationDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("modification_date >=", value, "modificationDate");
            return (Criteria) this;
        }

        public Criteria andModificationDateLessThan(Date value) {
            addCriterionForJDBCDate("modification_date <", value, "modificationDate");
            return (Criteria) this;
        }

        public Criteria andModificationDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("modification_date <=", value, "modificationDate");
            return (Criteria) this;
        }

        public Criteria andModificationDateIn(List<Date> values) {
            addCriterionForJDBCDate("modification_date in", values, "modificationDate");
            return (Criteria) this;
        }

        public Criteria andModificationDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("modification_date not in", values, "modificationDate");
            return (Criteria) this;
        }

        public Criteria andModificationDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("modification_date between", value1, value2, "modificationDate");
            return (Criteria) this;
        }

        public Criteria andModificationDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("modification_date not between", value1, value2, "modificationDate");
            return (Criteria) this;
        }

        public Criteria andSubmitUserIdIsNull() {
            addCriterion("submit_user_id is null");
            return (Criteria) this;
        }

        public Criteria andSubmitUserIdIsNotNull() {
            addCriterion("submit_user_id is not null");
            return (Criteria) this;
        }

        public Criteria andSubmitUserIdEqualTo(Long value) {
            addCriterion("submit_user_id =", value, "submitUserId");
            return (Criteria) this;
        }

        public Criteria andSubmitUserIdNotEqualTo(Long value) {
            addCriterion("submit_user_id <>", value, "submitUserId");
            return (Criteria) this;
        }

        public Criteria andSubmitUserIdGreaterThan(Long value) {
            addCriterion("submit_user_id >", value, "submitUserId");
            return (Criteria) this;
        }

        public Criteria andSubmitUserIdGreaterThanOrEqualTo(Long value) {
            addCriterion("submit_user_id >=", value, "submitUserId");
            return (Criteria) this;
        }

        public Criteria andSubmitUserIdLessThan(Long value) {
            addCriterion("submit_user_id <", value, "submitUserId");
            return (Criteria) this;
        }

        public Criteria andSubmitUserIdLessThanOrEqualTo(Long value) {
            addCriterion("submit_user_id <=", value, "submitUserId");
            return (Criteria) this;
        }

        public Criteria andSubmitUserIdIn(List<Long> values) {
            addCriterion("submit_user_id in", values, "submitUserId");
            return (Criteria) this;
        }

        public Criteria andSubmitUserIdNotIn(List<Long> values) {
            addCriterion("submit_user_id not in", values, "submitUserId");
            return (Criteria) this;
        }

        public Criteria andSubmitUserIdBetween(Long value1, Long value2) {
            addCriterion("submit_user_id between", value1, value2, "submitUserId");
            return (Criteria) this;
        }

        public Criteria andSubmitUserIdNotBetween(Long value1, Long value2) {
            addCriterion("submit_user_id not between", value1, value2, "submitUserId");
            return (Criteria) this;
        }

        public Criteria andApproveUserIdIsNull() {
            addCriterion("approve_user_id is null");
            return (Criteria) this;
        }

        public Criteria andApproveUserIdIsNotNull() {
            addCriterion("approve_user_id is not null");
            return (Criteria) this;
        }

        public Criteria andApproveUserIdEqualTo(Long value) {
            addCriterion("approve_user_id =", value, "approveUserId");
            return (Criteria) this;
        }

        public Criteria andApproveUserIdNotEqualTo(Long value) {
            addCriterion("approve_user_id <>", value, "approveUserId");
            return (Criteria) this;
        }

        public Criteria andApproveUserIdGreaterThan(Long value) {
            addCriterion("approve_user_id >", value, "approveUserId");
            return (Criteria) this;
        }

        public Criteria andApproveUserIdGreaterThanOrEqualTo(Long value) {
            addCriterion("approve_user_id >=", value, "approveUserId");
            return (Criteria) this;
        }

        public Criteria andApproveUserIdLessThan(Long value) {
            addCriterion("approve_user_id <", value, "approveUserId");
            return (Criteria) this;
        }

        public Criteria andApproveUserIdLessThanOrEqualTo(Long value) {
            addCriterion("approve_user_id <=", value, "approveUserId");
            return (Criteria) this;
        }

        public Criteria andApproveUserIdIn(List<Long> values) {
            addCriterion("approve_user_id in", values, "approveUserId");
            return (Criteria) this;
        }

        public Criteria andApproveUserIdNotIn(List<Long> values) {
            addCriterion("approve_user_id not in", values, "approveUserId");
            return (Criteria) this;
        }

        public Criteria andApproveUserIdBetween(Long value1, Long value2) {
            addCriterion("approve_user_id between", value1, value2, "approveUserId");
            return (Criteria) this;
        }

        public Criteria andApproveUserIdNotBetween(Long value1, Long value2) {
            addCriterion("approve_user_id not between", value1, value2, "approveUserId");
            return (Criteria) this;
        }

        public Criteria andTotalNumberIsNull() {
            addCriterion("total_number is null");
            return (Criteria) this;
        }

        public Criteria andTotalNumberIsNotNull() {
            addCriterion("total_number is not null");
            return (Criteria) this;
        }

        public Criteria andTotalNumberEqualTo(Long value) {
            addCriterion("total_number =", value, "totalNumber");
            return (Criteria) this;
        }

        public Criteria andTotalNumberNotEqualTo(Long value) {
            addCriterion("total_number <>", value, "totalNumber");
            return (Criteria) this;
        }

        public Criteria andTotalNumberGreaterThan(Long value) {
            addCriterion("total_number >", value, "totalNumber");
            return (Criteria) this;
        }

        public Criteria andTotalNumberGreaterThanOrEqualTo(Long value) {
            addCriterion("total_number >=", value, "totalNumber");
            return (Criteria) this;
        }

        public Criteria andTotalNumberLessThan(Long value) {
            addCriterion("total_number <", value, "totalNumber");
            return (Criteria) this;
        }

        public Criteria andTotalNumberLessThanOrEqualTo(Long value) {
            addCriterion("total_number <=", value, "totalNumber");
            return (Criteria) this;
        }

        public Criteria andTotalNumberIn(List<Long> values) {
            addCriterion("total_number in", values, "totalNumber");
            return (Criteria) this;
        }

        public Criteria andTotalNumberNotIn(List<Long> values) {
            addCriterion("total_number not in", values, "totalNumber");
            return (Criteria) this;
        }

        public Criteria andTotalNumberBetween(Long value1, Long value2) {
            addCriterion("total_number between", value1, value2, "totalNumber");
            return (Criteria) this;
        }

        public Criteria andTotalNumberNotBetween(Long value1, Long value2) {
            addCriterion("total_number not between", value1, value2, "totalNumber");
            return (Criteria) this;
        }

        public Criteria andTotalPriceIsNull() {
            addCriterion("total_price is null");
            return (Criteria) this;
        }

        public Criteria andTotalPriceIsNotNull() {
            addCriterion("total_price is not null");
            return (Criteria) this;
        }

        public Criteria andTotalPriceEqualTo(Float value) {
            addCriterion("total_price =", value, "totalPrice");
            return (Criteria) this;
        }

        public Criteria andTotalPriceNotEqualTo(Float value) {
            addCriterion("total_price <>", value, "totalPrice");
            return (Criteria) this;
        }

        public Criteria andTotalPriceGreaterThan(Float value) {
            addCriterion("total_price >", value, "totalPrice");
            return (Criteria) this;
        }

        public Criteria andTotalPriceGreaterThanOrEqualTo(Float value) {
            addCriterion("total_price >=", value, "totalPrice");
            return (Criteria) this;
        }

        public Criteria andTotalPriceLessThan(Float value) {
            addCriterion("total_price <", value, "totalPrice");
            return (Criteria) this;
        }

        public Criteria andTotalPriceLessThanOrEqualTo(Float value) {
            addCriterion("total_price <=", value, "totalPrice");
            return (Criteria) this;
        }

        public Criteria andTotalPriceIn(List<Float> values) {
            addCriterion("total_price in", values, "totalPrice");
            return (Criteria) this;
        }

        public Criteria andTotalPriceNotIn(List<Float> values) {
            addCriterion("total_price not in", values, "totalPrice");
            return (Criteria) this;
        }

        public Criteria andTotalPriceBetween(Float value1, Float value2) {
            addCriterion("total_price between", value1, value2, "totalPrice");
            return (Criteria) this;
        }

        public Criteria andTotalPriceNotBetween(Float value1, Float value2) {
            addCriterion("total_price not between", value1, value2, "totalPrice");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table rd_product
     *
     * @mbggenerated do_not_delete_during_merge Sun Aug 16 01:14:17 CST 2015
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table rd_product
     *
     * @mbggenerated Sun Aug 16 01:14:17 CST 2015
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}