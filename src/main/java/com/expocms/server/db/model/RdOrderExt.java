package com.expocms.server.db.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class RdOrderExt {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table rd_order
     *
     * @mbggenerated Sun Aug 16 01:14:17 CST 2015
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table rd_order
     *
     * @mbggenerated Sun Aug 16 01:14:17 CST 2015
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table rd_order
     *
     * @mbggenerated Sun Aug 16 01:14:17 CST 2015
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rd_order
     *
     * @mbggenerated Sun Aug 16 01:14:17 CST 2015
     */
    public RdOrderExt() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rd_order
     *
     * @mbggenerated Sun Aug 16 01:14:17 CST 2015
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rd_order
     *
     * @mbggenerated Sun Aug 16 01:14:17 CST 2015
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rd_order
     *
     * @mbggenerated Sun Aug 16 01:14:17 CST 2015
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rd_order
     *
     * @mbggenerated Sun Aug 16 01:14:17 CST 2015
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rd_order
     *
     * @mbggenerated Sun Aug 16 01:14:17 CST 2015
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rd_order
     *
     * @mbggenerated Sun Aug 16 01:14:17 CST 2015
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rd_order
     *
     * @mbggenerated Sun Aug 16 01:14:17 CST 2015
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rd_order
     *
     * @mbggenerated Sun Aug 16 01:14:17 CST 2015
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rd_order
     *
     * @mbggenerated Sun Aug 16 01:14:17 CST 2015
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rd_order
     *
     * @mbggenerated Sun Aug 16 01:14:17 CST 2015
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table rd_order
     *
     * @mbggenerated Sun Aug 16 01:14:17 CST 2015
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andProductIdIsNull() {
            addCriterion("product_id is null");
            return (Criteria) this;
        }

        public Criteria andProductIdIsNotNull() {
            addCriterion("product_id is not null");
            return (Criteria) this;
        }

        public Criteria andProductIdEqualTo(Long value) {
            addCriterion("product_id =", value, "productId");
            return (Criteria) this;
        }

        public Criteria andProductIdNotEqualTo(Long value) {
            addCriterion("product_id <>", value, "productId");
            return (Criteria) this;
        }

        public Criteria andProductIdGreaterThan(Long value) {
            addCriterion("product_id >", value, "productId");
            return (Criteria) this;
        }

        public Criteria andProductIdGreaterThanOrEqualTo(Long value) {
            addCriterion("product_id >=", value, "productId");
            return (Criteria) this;
        }

        public Criteria andProductIdLessThan(Long value) {
            addCriterion("product_id <", value, "productId");
            return (Criteria) this;
        }

        public Criteria andProductIdLessThanOrEqualTo(Long value) {
            addCriterion("product_id <=", value, "productId");
            return (Criteria) this;
        }

        public Criteria andProductIdIn(List<Long> values) {
            addCriterion("product_id in", values, "productId");
            return (Criteria) this;
        }

        public Criteria andProductIdNotIn(List<Long> values) {
            addCriterion("product_id not in", values, "productId");
            return (Criteria) this;
        }

        public Criteria andProductIdBetween(Long value1, Long value2) {
            addCriterion("product_id between", value1, value2, "productId");
            return (Criteria) this;
        }

        public Criteria andProductIdNotBetween(Long value1, Long value2) {
            addCriterion("product_id not between", value1, value2, "productId");
            return (Criteria) this;
        }

        public Criteria andTransactionDateIsNull() {
            addCriterion("transaction_date is null");
            return (Criteria) this;
        }

        public Criteria andTransactionDateIsNotNull() {
            addCriterion("transaction_date is not null");
            return (Criteria) this;
        }

        public Criteria andTransactionDateEqualTo(Date value) {
            addCriterionForJDBCDate("transaction_date =", value, "transactionDate");
            return (Criteria) this;
        }

        public Criteria andTransactionDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("transaction_date <>", value, "transactionDate");
            return (Criteria) this;
        }

        public Criteria andTransactionDateGreaterThan(Date value) {
            addCriterionForJDBCDate("transaction_date >", value, "transactionDate");
            return (Criteria) this;
        }

        public Criteria andTransactionDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("transaction_date >=", value, "transactionDate");
            return (Criteria) this;
        }

        public Criteria andTransactionDateLessThan(Date value) {
            addCriterionForJDBCDate("transaction_date <", value, "transactionDate");
            return (Criteria) this;
        }

        public Criteria andTransactionDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("transaction_date <=", value, "transactionDate");
            return (Criteria) this;
        }

        public Criteria andTransactionDateIn(List<Date> values) {
            addCriterionForJDBCDate("transaction_date in", values, "transactionDate");
            return (Criteria) this;
        }

        public Criteria andTransactionDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("transaction_date not in", values, "transactionDate");
            return (Criteria) this;
        }

        public Criteria andTransactionDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("transaction_date between", value1, value2, "transactionDate");
            return (Criteria) this;
        }

        public Criteria andTransactionDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("transaction_date not between", value1, value2, "transactionDate");
            return (Criteria) this;
        }

        public Criteria andPurchaseAmountIsNull() {
            addCriterion("purchase_amount is null");
            return (Criteria) this;
        }

        public Criteria andPurchaseAmountIsNotNull() {
            addCriterion("purchase_amount is not null");
            return (Criteria) this;
        }

        public Criteria andPurchaseAmountEqualTo(Float value) {
            addCriterion("purchase_amount =", value, "purchaseAmount");
            return (Criteria) this;
        }

        public Criteria andPurchaseAmountNotEqualTo(Float value) {
            addCriterion("purchase_amount <>", value, "purchaseAmount");
            return (Criteria) this;
        }

        public Criteria andPurchaseAmountGreaterThan(Float value) {
            addCriterion("purchase_amount >", value, "purchaseAmount");
            return (Criteria) this;
        }

        public Criteria andPurchaseAmountGreaterThanOrEqualTo(Float value) {
            addCriterion("purchase_amount >=", value, "purchaseAmount");
            return (Criteria) this;
        }

        public Criteria andPurchaseAmountLessThan(Float value) {
            addCriterion("purchase_amount <", value, "purchaseAmount");
            return (Criteria) this;
        }

        public Criteria andPurchaseAmountLessThanOrEqualTo(Float value) {
            addCriterion("purchase_amount <=", value, "purchaseAmount");
            return (Criteria) this;
        }

        public Criteria andPurchaseAmountIn(List<Float> values) {
            addCriterion("purchase_amount in", values, "purchaseAmount");
            return (Criteria) this;
        }

        public Criteria andPurchaseAmountNotIn(List<Float> values) {
            addCriterion("purchase_amount not in", values, "purchaseAmount");
            return (Criteria) this;
        }

        public Criteria andPurchaseAmountBetween(Float value1, Float value2) {
            addCriterion("purchase_amount between", value1, value2, "purchaseAmount");
            return (Criteria) this;
        }

        public Criteria andPurchaseAmountNotBetween(Float value1, Float value2) {
            addCriterion("purchase_amount not between", value1, value2, "purchaseAmount");
            return (Criteria) this;
        }

        public Criteria andPayAmountIsNull() {
            addCriterion("pay_amount is null");
            return (Criteria) this;
        }

        public Criteria andPayAmountIsNotNull() {
            addCriterion("pay_amount is not null");
            return (Criteria) this;
        }

        public Criteria andPayAmountEqualTo(Long value) {
            addCriterion("pay_amount =", value, "payAmount");
            return (Criteria) this;
        }

        public Criteria andPayAmountNotEqualTo(Long value) {
            addCriterion("pay_amount <>", value, "payAmount");
            return (Criteria) this;
        }

        public Criteria andPayAmountGreaterThan(Long value) {
            addCriterion("pay_amount >", value, "payAmount");
            return (Criteria) this;
        }

        public Criteria andPayAmountGreaterThanOrEqualTo(Long value) {
            addCriterion("pay_amount >=", value, "payAmount");
            return (Criteria) this;
        }

        public Criteria andPayAmountLessThan(Long value) {
            addCriterion("pay_amount <", value, "payAmount");
            return (Criteria) this;
        }

        public Criteria andPayAmountLessThanOrEqualTo(Long value) {
            addCriterion("pay_amount <=", value, "payAmount");
            return (Criteria) this;
        }

        public Criteria andPayAmountIn(List<Long> values) {
            addCriterion("pay_amount in", values, "payAmount");
            return (Criteria) this;
        }

        public Criteria andPayAmountNotIn(List<Long> values) {
            addCriterion("pay_amount not in", values, "payAmount");
            return (Criteria) this;
        }

        public Criteria andPayAmountBetween(Long value1, Long value2) {
            addCriterion("pay_amount between", value1, value2, "payAmount");
            return (Criteria) this;
        }

        public Criteria andPayAmountNotBetween(Long value1, Long value2) {
            addCriterion("pay_amount not between", value1, value2, "payAmount");
            return (Criteria) this;
        }

        public Criteria andBonusAmountIsNull() {
            addCriterion("bonus_amount is null");
            return (Criteria) this;
        }

        public Criteria andBonusAmountIsNotNull() {
            addCriterion("bonus_amount is not null");
            return (Criteria) this;
        }

        public Criteria andBonusAmountEqualTo(Float value) {
            addCriterion("bonus_amount =", value, "bonusAmount");
            return (Criteria) this;
        }

        public Criteria andBonusAmountNotEqualTo(Float value) {
            addCriterion("bonus_amount <>", value, "bonusAmount");
            return (Criteria) this;
        }

        public Criteria andBonusAmountGreaterThan(Float value) {
            addCriterion("bonus_amount >", value, "bonusAmount");
            return (Criteria) this;
        }

        public Criteria andBonusAmountGreaterThanOrEqualTo(Float value) {
            addCriterion("bonus_amount >=", value, "bonusAmount");
            return (Criteria) this;
        }

        public Criteria andBonusAmountLessThan(Float value) {
            addCriterion("bonus_amount <", value, "bonusAmount");
            return (Criteria) this;
        }

        public Criteria andBonusAmountLessThanOrEqualTo(Float value) {
            addCriterion("bonus_amount <=", value, "bonusAmount");
            return (Criteria) this;
        }

        public Criteria andBonusAmountIn(List<Float> values) {
            addCriterion("bonus_amount in", values, "bonusAmount");
            return (Criteria) this;
        }

        public Criteria andBonusAmountNotIn(List<Float> values) {
            addCriterion("bonus_amount not in", values, "bonusAmount");
            return (Criteria) this;
        }

        public Criteria andBonusAmountBetween(Float value1, Float value2) {
            addCriterion("bonus_amount between", value1, value2, "bonusAmount");
            return (Criteria) this;
        }

        public Criteria andBonusAmountNotBetween(Float value1, Float value2) {
            addCriterion("bonus_amount not between", value1, value2, "bonusAmount");
            return (Criteria) this;
        }

        public Criteria andAnnualizedYieldIsNull() {
            addCriterion("annualized_yield is null");
            return (Criteria) this;
        }

        public Criteria andAnnualizedYieldIsNotNull() {
            addCriterion("annualized_yield is not null");
            return (Criteria) this;
        }

        public Criteria andAnnualizedYieldEqualTo(String value) {
            addCriterion("annualized_yield =", value, "annualizedYield");
            return (Criteria) this;
        }

        public Criteria andAnnualizedYieldNotEqualTo(String value) {
            addCriterion("annualized_yield <>", value, "annualizedYield");
            return (Criteria) this;
        }

        public Criteria andAnnualizedYieldGreaterThan(String value) {
            addCriterion("annualized_yield >", value, "annualizedYield");
            return (Criteria) this;
        }

        public Criteria andAnnualizedYieldGreaterThanOrEqualTo(String value) {
            addCriterion("annualized_yield >=", value, "annualizedYield");
            return (Criteria) this;
        }

        public Criteria andAnnualizedYieldLessThan(String value) {
            addCriterion("annualized_yield <", value, "annualizedYield");
            return (Criteria) this;
        }

        public Criteria andAnnualizedYieldLessThanOrEqualTo(String value) {
            addCriterion("annualized_yield <=", value, "annualizedYield");
            return (Criteria) this;
        }

        public Criteria andAnnualizedYieldLike(String value) {
            addCriterion("annualized_yield like", value, "annualizedYield");
            return (Criteria) this;
        }

        public Criteria andAnnualizedYieldNotLike(String value) {
            addCriterion("annualized_yield not like", value, "annualizedYield");
            return (Criteria) this;
        }

        public Criteria andAnnualizedYieldIn(List<String> values) {
            addCriterion("annualized_yield in", values, "annualizedYield");
            return (Criteria) this;
        }

        public Criteria andAnnualizedYieldNotIn(List<String> values) {
            addCriterion("annualized_yield not in", values, "annualizedYield");
            return (Criteria) this;
        }

        public Criteria andAnnualizedYieldBetween(String value1, String value2) {
            addCriterion("annualized_yield between", value1, value2, "annualizedYield");
            return (Criteria) this;
        }

        public Criteria andAnnualizedYieldNotBetween(String value1, String value2) {
            addCriterion("annualized_yield not between", value1, value2, "annualizedYield");
            return (Criteria) this;
        }

        public Criteria andDaysRemainIsNull() {
            addCriterion("days_remain is null");
            return (Criteria) this;
        }

        public Criteria andDaysRemainIsNotNull() {
            addCriterion("days_remain is not null");
            return (Criteria) this;
        }

        public Criteria andDaysRemainEqualTo(Integer value) {
            addCriterion("days_remain =", value, "daysRemain");
            return (Criteria) this;
        }

        public Criteria andDaysRemainNotEqualTo(Integer value) {
            addCriterion("days_remain <>", value, "daysRemain");
            return (Criteria) this;
        }

        public Criteria andDaysRemainGreaterThan(Integer value) {
            addCriterion("days_remain >", value, "daysRemain");
            return (Criteria) this;
        }

        public Criteria andDaysRemainGreaterThanOrEqualTo(Integer value) {
            addCriterion("days_remain >=", value, "daysRemain");
            return (Criteria) this;
        }

        public Criteria andDaysRemainLessThan(Integer value) {
            addCriterion("days_remain <", value, "daysRemain");
            return (Criteria) this;
        }

        public Criteria andDaysRemainLessThanOrEqualTo(Integer value) {
            addCriterion("days_remain <=", value, "daysRemain");
            return (Criteria) this;
        }

        public Criteria andDaysRemainIn(List<Integer> values) {
            addCriterion("days_remain in", values, "daysRemain");
            return (Criteria) this;
        }

        public Criteria andDaysRemainNotIn(List<Integer> values) {
            addCriterion("days_remain not in", values, "daysRemain");
            return (Criteria) this;
        }

        public Criteria andDaysRemainBetween(Integer value1, Integer value2) {
            addCriterion("days_remain between", value1, value2, "daysRemain");
            return (Criteria) this;
        }

        public Criteria andDaysRemainNotBetween(Integer value1, Integer value2) {
            addCriterion("days_remain not between", value1, value2, "daysRemain");
            return (Criteria) this;
        }

        public Criteria andInterestStartDateIsNull() {
            addCriterion("interest_start_date is null");
            return (Criteria) this;
        }

        public Criteria andInterestStartDateIsNotNull() {
            addCriterion("interest_start_date is not null");
            return (Criteria) this;
        }

        public Criteria andInterestStartDateEqualTo(Date value) {
            addCriterionForJDBCDate("interest_start_date =", value, "interestStartDate");
            return (Criteria) this;
        }

        public Criteria andInterestStartDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("interest_start_date <>", value, "interestStartDate");
            return (Criteria) this;
        }

        public Criteria andInterestStartDateGreaterThan(Date value) {
            addCriterionForJDBCDate("interest_start_date >", value, "interestStartDate");
            return (Criteria) this;
        }

        public Criteria andInterestStartDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("interest_start_date >=", value, "interestStartDate");
            return (Criteria) this;
        }

        public Criteria andInterestStartDateLessThan(Date value) {
            addCriterionForJDBCDate("interest_start_date <", value, "interestStartDate");
            return (Criteria) this;
        }

        public Criteria andInterestStartDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("interest_start_date <=", value, "interestStartDate");
            return (Criteria) this;
        }

        public Criteria andInterestStartDateIn(List<Date> values) {
            addCriterionForJDBCDate("interest_start_date in", values, "interestStartDate");
            return (Criteria) this;
        }

        public Criteria andInterestStartDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("interest_start_date not in", values, "interestStartDate");
            return (Criteria) this;
        }

        public Criteria andInterestStartDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("interest_start_date between", value1, value2, "interestStartDate");
            return (Criteria) this;
        }

        public Criteria andInterestStartDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("interest_start_date not between", value1, value2, "interestStartDate");
            return (Criteria) this;
        }

        public Criteria andInterestEndDateIsNull() {
            addCriterion("interest_end_date is null");
            return (Criteria) this;
        }

        public Criteria andInterestEndDateIsNotNull() {
            addCriterion("interest_end_date is not null");
            return (Criteria) this;
        }

        public Criteria andInterestEndDateEqualTo(Date value) {
            addCriterionForJDBCDate("interest_end_date =", value, "interestEndDate");
            return (Criteria) this;
        }

        public Criteria andInterestEndDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("interest_end_date <>", value, "interestEndDate");
            return (Criteria) this;
        }

        public Criteria andInterestEndDateGreaterThan(Date value) {
            addCriterionForJDBCDate("interest_end_date >", value, "interestEndDate");
            return (Criteria) this;
        }

        public Criteria andInterestEndDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("interest_end_date >=", value, "interestEndDate");
            return (Criteria) this;
        }

        public Criteria andInterestEndDateLessThan(Date value) {
            addCriterionForJDBCDate("interest_end_date <", value, "interestEndDate");
            return (Criteria) this;
        }

        public Criteria andInterestEndDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("interest_end_date <=", value, "interestEndDate");
            return (Criteria) this;
        }

        public Criteria andInterestEndDateIn(List<Date> values) {
            addCriterionForJDBCDate("interest_end_date in", values, "interestEndDate");
            return (Criteria) this;
        }

        public Criteria andInterestEndDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("interest_end_date not in", values, "interestEndDate");
            return (Criteria) this;
        }

        public Criteria andInterestEndDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("interest_end_date between", value1, value2, "interestEndDate");
            return (Criteria) this;
        }

        public Criteria andInterestEndDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("interest_end_date not between", value1, value2, "interestEndDate");
            return (Criteria) this;
        }

        public Criteria andRedemptionDateIsNull() {
            addCriterion("redemption_date is null");
            return (Criteria) this;
        }

        public Criteria andRedemptionDateIsNotNull() {
            addCriterion("redemption_date is not null");
            return (Criteria) this;
        }

        public Criteria andRedemptionDateEqualTo(Date value) {
            addCriterionForJDBCDate("redemption_date =", value, "redemptionDate");
            return (Criteria) this;
        }

        public Criteria andRedemptionDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("redemption_date <>", value, "redemptionDate");
            return (Criteria) this;
        }

        public Criteria andRedemptionDateGreaterThan(Date value) {
            addCriterionForJDBCDate("redemption_date >", value, "redemptionDate");
            return (Criteria) this;
        }

        public Criteria andRedemptionDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("redemption_date >=", value, "redemptionDate");
            return (Criteria) this;
        }

        public Criteria andRedemptionDateLessThan(Date value) {
            addCriterionForJDBCDate("redemption_date <", value, "redemptionDate");
            return (Criteria) this;
        }

        public Criteria andRedemptionDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("redemption_date <=", value, "redemptionDate");
            return (Criteria) this;
        }

        public Criteria andRedemptionDateIn(List<Date> values) {
            addCriterionForJDBCDate("redemption_date in", values, "redemptionDate");
            return (Criteria) this;
        }

        public Criteria andRedemptionDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("redemption_date not in", values, "redemptionDate");
            return (Criteria) this;
        }

        public Criteria andRedemptionDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("redemption_date between", value1, value2, "redemptionDate");
            return (Criteria) this;
        }

        public Criteria andRedemptionDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("redemption_date not between", value1, value2, "redemptionDate");
            return (Criteria) this;
        }

        public Criteria andFundStateIsNull() {
            addCriterion("fund_state is null");
            return (Criteria) this;
        }

        public Criteria andFundStateIsNotNull() {
            addCriterion("fund_state is not null");
            return (Criteria) this;
        }

        public Criteria andFundStateEqualTo(String value) {
            addCriterion("fund_state =", value, "fundState");
            return (Criteria) this;
        }

        public Criteria andFundStateNotEqualTo(String value) {
            addCriterion("fund_state <>", value, "fundState");
            return (Criteria) this;
        }

        public Criteria andFundStateGreaterThan(String value) {
            addCriterion("fund_state >", value, "fundState");
            return (Criteria) this;
        }

        public Criteria andFundStateGreaterThanOrEqualTo(String value) {
            addCriterion("fund_state >=", value, "fundState");
            return (Criteria) this;
        }

        public Criteria andFundStateLessThan(String value) {
            addCriterion("fund_state <", value, "fundState");
            return (Criteria) this;
        }

        public Criteria andFundStateLessThanOrEqualTo(String value) {
            addCriterion("fund_state <=", value, "fundState");
            return (Criteria) this;
        }

        public Criteria andFundStateLike(String value) {
            addCriterion("fund_state like", value, "fundState");
            return (Criteria) this;
        }

        public Criteria andFundStateNotLike(String value) {
            addCriterion("fund_state not like", value, "fundState");
            return (Criteria) this;
        }

        public Criteria andFundStateIn(List<String> values) {
            addCriterion("fund_state in", values, "fundState");
            return (Criteria) this;
        }

        public Criteria andFundStateNotIn(List<String> values) {
            addCriterion("fund_state not in", values, "fundState");
            return (Criteria) this;
        }

        public Criteria andFundStateBetween(String value1, String value2) {
            addCriterion("fund_state between", value1, value2, "fundState");
            return (Criteria) this;
        }

        public Criteria andFundStateNotBetween(String value1, String value2) {
            addCriterion("fund_state not between", value1, value2, "fundState");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table rd_order
     *
     * @mbggenerated do_not_delete_during_merge Sun Aug 16 01:14:17 CST 2015
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table rd_order
     *
     * @mbggenerated Sun Aug 16 01:14:17 CST 2015
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}